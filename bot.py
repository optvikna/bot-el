import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ===
TOKEN = '7617891900:AAHtNNOED6qNFI3pNxttfreqo3RA6UMgctk'
GROUP_CHAT_ID = -1002862196775  # –í–≤–µ–¥–∏ —Å–≤—ñ–π ID –≥—Ä—É–ø–∏

bot = telebot.TeleBot(TOKEN)

# –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
orders = {}
awaiting_sum = {}  # —Ç–∏–º—á–∞—Å–æ–≤–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ö—Ç–æ –≤–≤–æ–¥–∏—Ç—å —Å—É–º—É —ñ –¥–æ —è–∫–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
@bot.message_handler(commands=['add'])
def handle_add(message):
    if message.chat.type == 'private':
        order_text = message.text[len('/add '):].strip()
        if not order_text:
            bot.send_message(message.chat.id, "‚ùó –í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è /add")
            return

        msg = bot.send_message(
            GROUP_CHAT_ID,
            f"üÜï <b>–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</b>\n\n{order_text}",
            parse_mode="HTML",
            reply_markup=order_keyboard()
        )
        orders[msg.message_id] = {
            "text": order_text,
            "status": "–Ω–æ–≤–µ",
            "taken_by": None
        }
        bot.send_message(message.chat.id, "‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–µ")

# –ö–Ω–æ–ø–∫–∏
def order_keyboard():
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("‚úÖ –í–∑—è—Ç–∏ –≤ —Ä–æ–±–æ—Ç—É", callback_data="take"))
    return markup

def done_keyboard():
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("‚úÖ –í–∏–∫–æ–Ω–∞–Ω–æ", callback_data="done"))
    return markup

def sum_keyboard():
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üíµ –°—É–º–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data="sum"))
    return markup

# –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    message_id = call.message.message_id
    user = call.from_user
    order = orders.get(message_id)

    if not order:
        bot.answer_callback_query(call.id, "‚ùó –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return

    if call.data == "take":
        if order["status"] != "–Ω–æ–≤–µ":
            bot.answer_callback_query(call.id, "–¶–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤–∂–µ –≤ —Ä–æ–±–æ—Ç—ñ –∞–±–æ –≤–∏–∫–æ–Ω–∞–Ω–æ.")
            return

        order["status"] = "–≤ —Ä–æ–±–æ—Ç—ñ"
        order["taken_by"] = user.id

        updated_text = f"üõ† <b>–í —Ä–æ–±–æ—Ç—ñ</b>\n\n{order['text']}\nüë®‚Äçüîß –ú–∞–π—Å—Ç–µ—Ä: {user.first_name}"
        bot.edit_message_text(updated_text, GROUP_CHAT_ID, message_id, parse_mode="HTML", reply_markup=done_keyboard())
        bot.answer_callback_query(call.id, "–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤–∑—è—Ç–æ –≤ —Ä–æ–±–æ—Ç—É.")

    elif call.data == "done":
        if order["status"] != "–≤ —Ä–æ–±–æ—Ç—ñ" or order["taken_by"] != user.id:
            bot.answer_callback_query(call.id, "–¢—ñ–ª—å–∫–∏ –º–∞–π—Å—Ç–µ—Ä, —è–∫–∏–π –≤–∑—è–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –º–æ–∂–µ –∑–∞–≤–µ—Ä—à–∏—Ç–∏ –π–æ–≥–æ.")
            return

        order["status"] = "–≤–∏–∫–æ–Ω–∞–Ω–æ"
        updated_text = (
            f"‚úÖ <b>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ</b>\n\n"
            f"{order['text']}\n"
            f"üë®‚Äçüîß –ú–∞–π—Å—Ç–µ—Ä: {user.first_name}"
        )
        bot.edit_message_text(updated_text, GROUP_CHAT_ID, message_id, parse_mode="HTML", reply_markup=sum_keyboard())
        bot.answer_callback_query(call.id, "–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ.")

    elif call.data == "sum":
        if order["status"] != "–≤–∏–∫–æ–Ω–∞–Ω–æ" or order["taken_by"] != user.id:
            bot.answer_callback_query(call.id, "‚ùó –í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∫–∞–∑–∞—Ç–∏ —Å—É–º—É –¥–ª—è —Ü—å–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.")
            return

        awaiting_sum[user.id] = message_id  # –∑–∞–ø–∞–º‚Äô—è—Ç–æ–≤—É—î–º–æ, —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –≤–≤–µ—Å—Ç–∏ —Å—É–º—É
        bot.send_message(GROUP_CHAT_ID, f"{user.first_name}, üí¨ –í–≤–µ–¥—ñ—Ç—å —Å—É–º—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 790 –≥—Ä–Ω):")
        bot.answer_callback_query(call.id)

# –û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è —Å—É–º–∏ –≤ –≥—Ä—É–ø—ñ
@bot.message_handler(func=lambda message: message.chat.id == GROUP_CHAT_ID)
def handle_group_message(message):
    user_id = message.from_user.id

    if user_id in awaiting_sum:
        message_id = awaiting_sum.pop(user_id)
        order = orders.get(message_id)
        if order:
            sum_text = message.text.strip()
            updated_text = (
                f"‚úÖ <b>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ</b>\n\n"
                f"{order['text']}\n"
                f"üë®‚Äçüîß –ú–∞–π—Å—Ç–µ—Ä: {message.from_user.first_name}\n"
                f"üíµ –°—É–º–∞: {sum_text}"
            )
            bot.edit_message_text(updated_text, GROUP_CHAT_ID, message_id, parse_mode="HTML")
            bot.reply_to(message, "‚úÖ –°—É–º–∞ –¥–æ–¥–∞–Ω–∞, –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ.")

# –ó–∞–ø—É—Å–∫
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
bot.infinity_polling()
